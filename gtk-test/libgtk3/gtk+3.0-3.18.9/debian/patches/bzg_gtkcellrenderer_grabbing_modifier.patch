From ca07d6782a1fd5f47186eebcc5185e34715c81d8 Mon Sep 17 00:00:00 2001
From: Ryan Lortie <desrt@desrt.ca>
Date: Wed, 22 Oct 2014 11:58:34 -0400
Subject: [PATCH] accel cell renderer: support modifier 'tapping'

Introduce a new GTK_CELL_RENDERER_ACCEL_MODE_MODIFIER_TAP that accepts
tapping modifier keys (eg: simply pressing and releasing the Windows
key) as accelerators.

https://bugzilla.gnome.org/show_bug.cgi?id=673360
---
 gtk/gtkcellrendereraccel.c | 44 ++++++++++++++++++++++++++++++++++++++++++++
 gtk/gtkcellrendereraccel.h |  4 +++-
 2 files changed, 47 insertions(+), 1 deletion(-)

diff --git a/gtk/gtkcellrendereraccel.c b/gtk/gtkcellrendereraccel.c
index 8ea1d86..4ed4263 100644
--- a/gtk/gtkcellrendereraccel.c
+++ b/gtk/gtkcellrendereraccel.c
@@ -189,6 +189,10 @@ gtk_cell_renderer_accel_class_init (GtkCellRendererAccelClass *cell_accel_class)
    * accepted by GTK+ are allowed, and the accelerators are rendered
    * in the same way as they are in menus.
    *
+   * If the mode is set to %GTK_CELL_RENDERER_ACCEL_MODE_MODIFIER_TAP
+   * then bare modifiers can be set as accelerators by tapping (ie:
+   * pressing and immediately releasing) them.
+   *
    * Since: 2.10
    */
   g_object_class_install_property (object_class,
@@ -550,6 +554,13 @@ struct _GtkCellEditableEventBox
   GtkCellRendererAccelMode accel_mode;
   gchar *path;
   GtkCellRenderer *cell;
+
+  /* Used to track the last modifier that was pressed down.
+   * We can then treat a directly-following release of the same key as a
+   * 'tap'.
+   */
+  GdkModifierType last_saw_state;
+  guint last_saw_keyval;
 };
 
 enum {
@@ -592,6 +603,9 @@ gtk_cell_editable_event_box_key_press_event (GtkWidget   *widget,
 
   display = gtk_widget_get_display (widget);
 
+  box->last_saw_keyval = event->keyval;
+  box->last_saw_state = event->state;
+
   if (event->is_modifier)
     return TRUE;
 
@@ -673,6 +687,35 @@ gtk_cell_editable_event_box_key_press_event (GtkWidget   *widget,
   return TRUE;
 }
 
+static gboolean
+gtk_cell_editable_event_box_key_release_event (GtkWidget   *widget,
+                                               GdkEventKey *event)
+{
+  GtkCellEditableEventBox *box = (GtkCellEditableEventBox*)widget;
+
+  /* User released a modifier key right after pressing it and we're
+   * in 'modifier tap' mode: this is our new accel.
+   */
+  if (box->accel_mode == GTK_CELL_RENDERER_ACCEL_MODE_MODIFIER_TAP &&
+      event->is_modifier && event->keyval == box->last_saw_keyval)
+    {
+      /* We use the mask from the down press -- the release event
+       * has the modifier mask from the modifier key itself.
+       */
+      gtk_grab_remove (widget);
+      gtk_cell_renderer_accel_ungrab (GTK_CELL_RENDERER_ACCEL (box->cell));
+      gtk_cell_editable_editing_done (GTK_CELL_EDITABLE (widget));
+      gtk_cell_editable_remove_widget (GTK_CELL_EDITABLE (widget));
+
+      g_signal_emit (box->cell, signals[ACCEL_EDITED], 0, box->path,
+                     event->keyval, box->last_saw_state, event->hardware_keycode);
+    }
+
+
+  /* ignore all other key release events */
+  return TRUE;
+}
+
 static void
 gtk_cell_editable_event_box_unrealize (GtkWidget *widget)
 {
@@ -755,6 +798,7 @@ gtk_cell_editable_event_box_class_init (GtkCellEditableEventBoxClass *class)
   object_class->get_property = gtk_cell_editable_event_box_get_property;
 
   widget_class->key_press_event = gtk_cell_editable_event_box_key_press_event;
+  widget_class->key_release_event = gtk_cell_editable_event_box_key_release_event;
   widget_class->unrealize = gtk_cell_editable_event_box_unrealize;
 
   g_object_class_override_property (object_class,
diff --git a/gtk/gtkcellrendereraccel.h b/gtk/gtkcellrendereraccel.h
index 6d7b420..a023a06 100644
--- a/gtk/gtkcellrendereraccel.h
+++ b/gtk/gtkcellrendereraccel.h
@@ -41,6 +41,7 @@ typedef struct _GtkCellRendererAccelClass         GtkCellRendererAccelClass;
  * GtkCellRendererAccelMode:
  * @GTK_CELL_RENDERER_ACCEL_MODE_GTK: GTK+ accelerators mode
  * @GTK_CELL_RENDERER_ACCEL_MODE_OTHER: Other accelerator mode
+ * GTK_CELL_RENDERER_ACCEL_MODE_MODIFIER_TAP: Bare modifiers mode
  *
  * Determines if the edited accelerators are GTK+ accelerators. If
  * they are, consumed modifiers are suppressed, only accelerators
@@ -50,7 +51,8 @@ typedef struct _GtkCellRendererAccelClass         GtkCellRendererAccelClass;
 typedef enum
 {
   GTK_CELL_RENDERER_ACCEL_MODE_GTK,
-  GTK_CELL_RENDERER_ACCEL_MODE_OTHER
+  GTK_CELL_RENDERER_ACCEL_MODE_OTHER,
+  GTK_CELL_RENDERER_ACCEL_MODE_MODIFIER_TAP
 } GtkCellRendererAccelMode;
 
 
-- 
2.1.0

